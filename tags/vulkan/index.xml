<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vulkan on w-i-p</title>
    <link>https://asurati.github.io/wip/tags/vulkan/</link>
    <description>Recent content in Vulkan on w-i-p</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 Mar 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://asurati.github.io/wip/tags/vulkan/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>vulkan: Dissecting vkcube: Build</title>
      <link>https://asurati.github.io/wip/post/2024/03/24/vulkan-dissecting-vkcube-build/</link>
      <pubDate>Sun, 24 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://asurati.github.io/wip/post/2024/03/24/vulkan-dissecting-vkcube-build/</guid>
      <description>&lt;p&gt;This post lists the steps to build debug versions of mesa, libdrm and&#xA;vkcube.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;    # Build debug versions of mesa, libdrm, and vulkan-tools&#xA;    # build-mesa-vt-dbg.sh&#xA;    # Run as: sh build-mesa-vt-dbg.sh&#xA;    &#xA;    set -e&#xA;    set -u&#xA;    &#xA;    DOWNLOAD=false&#xA;    SRC=/tmp/src&#xA;    BLD=/tmp/bld&#xA;    INSTALL=$HOME/tools/vt-dbg&#xA;    &#xA;    mkdir -p $SRC&#xA;    if [ &amp;quot;$DOWNLOAD&amp;quot; == &amp;quot;true&amp;quot; ]; then&#xA;        cd $SRC&#xA;        git clone --depth 1 https://github.com/KhronosGroup/Vulkan-Headers.git vh&#xA;        git clone --depth 1 https://github.com/KhronosGroup/Vulkan-Tools.git vt&#xA;        git clone --depth 1 https://github.com/zeux/volk.git volk&#xA;        git clone --depth 1 https://github.com/CLRX/CLRX-mirror.git clrx&#xA;        git clone --depth 1 https://gitlab.freedesktop.org/wayland/wayland-protocols.git wp&#xA;        git clone --depth 1 https://gitlab.freedesktop.org/mesa/drm.git drm&#xA;        git clone --depth 1 https://gitlab.freedesktop.org/mesa/mesa.git mesa&#xA;    fi&#xA;    &#xA;    # Some other dependencies assumed to be already installed:&#xA;    # wayland-scanner, wayland-client, meson, cmake, pkgconf, python-mako,&#xA;    # llvm, llvm-libs&#xA;    &#xA;    mkdir -p $BLD/vh&#xA;    mkdir -p $BLD/vt&#xA;    mkdir -p $BLD/wp&#xA;    mkdir -p $BLD/clrx&#xA;    mkdir -p $BLD/volk&#xA;    mkdir -p $BLD/drm&#xA;    mkdir -p $BLD/mesa&#xA;    &#xA;    # clrx disassembler seems to be required only for older AMD GPUs,&#xA;    # GFX6-GFX7 generation. Disabled for now.&#xA;    # cd $BLD/clrx&#xA;    # cmake -DCMAKE_INSTALL_PREFIX=$INSTALL/clrx -DCMAKE_BUILD_TYPE=Release $SRC/clrx&#xA;    # make install -j4&#xA;    &#xA;    # Vulkan-Headers&#xA;    cd $BLD/vh&#xA;    cmake -DCMAKE_INSTALL_PREFIX=$INSTALL/vh $SRC/vh&#xA;    make install -j4&#xA;    &#xA;    # volk&#xA;    cd $BLD/volk&#xA;    cmake -DCMAKE_INSTALL_PREFIX=$INSTALL/volk -DVOLK_HEADERS_ONLY=ON \&#xA;    -DVOLK_INSTALL=ON -DVULKAN_HEADERS_INSTALL_DIR=$INSTALL/vh $SRC/volk&#xA;    make install -j4&#xA;    &#xA;    # wayland-protocols&#xA;    cd $SRC/wp&#xA;    meson setup --reconfigure $BLD/wp -Dprefix=$INSTALL/wp -Dtests=false&#xA;    ninja -C $BLD/wp install -j4&#xA;    &#xA;    # Vulkan-Tools (only cube on wayland)&#xA;    cd $BLD/vt&#xA;    PKG_CONFIG_PATH=$INSTALL/wp/share/pkgconfig \&#xA;    cmake -DCMAKE_INSTALL_PREFIX=$INSTALL/vt \&#xA;    -DCMAKE_PREFIX_PATH=$INSTALL/volk -DBUILD_ICD=OFF -DBUILD_CUBE=ON \&#xA;    -DBUILD_VULKANINFO=OFF -DVULKAN_HEADERS_INSTALL_DIR=$INSTALL/vh \&#xA;    -DBUILD_WSI_XCB_SUPPORT=OFF -DBUILD_WSI_XLIB_SUPPORT=OFF \&#xA;    -DBUILD_WSI_WAYLAND_SUPPORT=ON -DCUBE_WSI_SELECTION=WAYLAND \&#xA;    -DCMAKE_BUILD_TYPE=Debug $SRC/vt&#xA;    make install -j4&#xA;    &#xA;    # libdrm (only vulkan for AMD)&#xA;    cd $SRC/drm&#xA;    meson setup --reconfigure $BLD/drm -Dprefix=$INSTALL/drm -Dbuildtype=debug \&#xA;    -Dradeon=disabled -Dintel=disabled -Damdgpu=enabled -Dnouveau=disabled \&#xA;    -Dvmwgfx=disabled -Dfreedreno=disabled -Dvc4=disabled -Detnaviv=disabled \&#xA;    -Dcairo-tests=disabled -Dtests=false -Dman-pages=disabled -Dvalgrind=disabled&#xA;    ninja -C $BLD/drm install -j4&#xA;    &#xA;    # mesa (only vulkan for AMD + LLVM)&#xA;    cd $SRC/mesa&#xA;    PKG_CONFIG_PATH=$INSTALL/wp/share/pkgconfig \&#xA;    meson setup --reconfigure $BLD/mesa -Dprefix=$INSTALL/mesa \&#xA;    -Dbuildtype=debug -Dgallium-drivers= -Dvulkan-drivers=amd -Degl=disabled \&#xA;    -Dplatforms=wayland -Dtools= -Dllvm=enabled -Dvideo-codecs=&#xA;    ninja -C $BLD/mesa install -j4&#xA;    &#xA;    # rm -rf /tmp/src&#xA;    # rm -rf /tmp/bld&#xA;    &#xA;    # To run vkcube, with various debug-logs enabled.&#xA;    &#xA;    # INSTALL=$HOME/tools/vt-dbg;\&#xA;    # PATH=$PATH:$INSTALL/clrx/bin \&#xA;    # LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$INSTALL/clrx/lib64 \&#xA;    # LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$INSTALL/drm/lib \&#xA;    # LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$INSTALL/mesa/lib \&#xA;    # RADEON_ICD_FILENAME=radeon.icd.x86_64.json \&#xA;    # VK_ICD_FILENAMES=$INSTALL/mesa/share/vulkan/icd.d/$RADEON_ICD_FILE_NAME \&#xA;    # MESA_SHADER_CACHE_DISABLE=true \&#xA;    # NIR_DEBUG=print,print_vs,print_fs,print_cs,print_internal,print_pass_flags \&#xA;    # RADV_DEBUG=epilogs,img,info,llvm,metashaders,nomemorycache,preoptir,prologs,\&#xA;    # shaders,shaderstats,spirv,startup \&#xA;    # $INSTALL/vt/bin/vkcube-wayland --c 1 &amp;amp;&amp;gt; /tmp/out.txt&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;</description>
    </item>
  </channel>
</rss>
